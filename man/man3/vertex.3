.TH "vertex" 3 "Mon Mar 15 2021" "Version 1.0.6" "Topologic" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vertex
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <vertex\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "int \fBid\fP"
.br
.ti -1c
.RI "int \fBis_active\fP"
.br
.ti -1c
.RI "void(* \fBf\fP )(struct \fBgraph\fP *, struct \fBvertex_result\fP *, void *, void *)"
.br
.ti -1c
.RI "void * \fBglbl\fP"
.br
.ti -1c
.RI "union \fBshared_edge\fP * \fBshared\fP"
.br
.ti -1c
.RI "pthread_mutex_t \fBlock\fP"
.br
.ti -1c
.RI "struct \fBAVLTree\fP * \fBedge_tree\fP"
.br
.ti -1c
.RI "struct \fBAVLTree\fP * \fBjoining_vertices\fP"
.br
.ti -1c
.RI "enum \fBCONTEXT\fP \fBcontext\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
vertex 
.SH "Field Documentation"
.PP 
.SS "enum \fBCONTEXT\fP vertex::context"

.PP
Referenced by create_bi_edge(), create_edge(), create_vertex(), modify_edge(), modify_shared_edge_vars(), modify_vertex(), remove_edge(), remove_edge_id(), and remove_vertex()\&.
.SS "struct \fBAVLTree\fP* vertex::edge_tree"

.PP
Referenced by cleanup(), create_edge(), create_vertex(), fire(), main(), modify_edge(), print_state(), remove_edge(), remove_edge_id(), remove_vertex(), run_single(), and test_graph_remove_edge()\&.
.SS "void(* vertex::f) (struct \fBgraph\fP *, struct \fBvertex_result\fP *, void *, void *)"

.PP
Referenced by create_vertex(), fire(), init(), modify_vertex(), print_state(), and run_single()\&.
.SS "void* vertex::glbl"

.PP
Referenced by cleanup(), create_vertex(), fire(), modify_vertex(), print_state(), remove_vertex(), run_single(), test_graph_modify_vertex(), and test_graph_remove_vertex()\&.
.SS "int vertex::id"

.PP
Referenced by cleanup(), create_edge(), create_vertex(), modify_edge(), print_state(), remove_edge(), remove_edge_id(), remove_vertex(), setEdge(), start_set(), and test_graph_remove_edge()\&.
.SS "int vertex::is_active"

.PP
Referenced by create_vertex(), fire(), print_state(), run(), and run_single()\&.
.SS "struct \fBAVLTree\fP* vertex::joining_vertices"

.PP
Referenced by create_edge(), create_vertex(), remove_edge(), remove_edge_id(), and remove_vertex()\&.
.SS "pthread_mutex_t vertex::lock"

.PP
Referenced by create_edge(), create_vertex(), fire(), modify_edge(), modify_shared_edge_vars(), modify_vertex(), remove_edge(), remove_edge_id(), and remove_vertex()\&.
.SS "union \fBshared_edge\fP* vertex::shared"

.PP
Referenced by create_edge(), create_vertex(), fire(), modify_shared_edge_vars(), print_state(), remove_vertex(), and run_single()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Topologic from the source code\&.
