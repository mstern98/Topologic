.TH "src/graph.c" 3 "Mon Mar 15 2021" "Version 1.0.6" "Topologic" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/graph.c
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./include/topologic\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fBgraph\fP * \fBgraph_init\fP (int max_state_changes, int snapshot_timestamp, int max_loop, unsigned int lvl_verbose, enum \fBCONTEXT\fP context, enum \fBMEM_OPTION\fP mem_option)"
.br
.ti -1c
.RI "void \fBdestroy_graph_stack\fP (struct \fBstack\fP *\fBstack\fP)"
.br
.ti -1c
.RI "void \fBdestroy_graph_avl\fP (struct \fBgraph\fP *\fBgraph\fP, struct \fBAVLTree\fP *tree)"
.br
.ti -1c
.RI "int \fBdestroy_graph\fP (struct \fBgraph\fP *\fBgraph\fP)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int destroy_graph (struct \fBgraph\fP * graph)"
@PARAM graph: the graph @RETURN -1 for fail; 0 for success Destroys and frees the graph 
.PP
References graph::black_fire, graph::black_locked, graph::black_vertex_count, graph::color_lock, graph::context, destroy_graph_avl(), destroy_graph_stack(), graph::lock, graph::modify, graph::pause_cond, graph::red_fire, graph::red_locked, graph::red_vertex_count, graph::remove_edges, graph::remove_vertices, SINGLE, graph::start, graph::state, TERMINATE, topologic_debug, and graph::vertices\&.
.PP
Referenced by cleanup(), and main()\&.
.SS "void destroy_graph_avl (struct \fBgraph\fP * graph, struct \fBAVLTree\fP * tree)"

.PP
References destroy_avl(), destroy_stack(), init_stack(), pop(), preorder(), and remove_vertex()\&.
.PP
Referenced by destroy_graph()\&.
.SS "void destroy_graph_stack (struct \fBstack\fP * stack)"

.PP
References destroy_request(), destroy_stack(), and pop()\&.
.PP
Referenced by destroy_graph()\&.
.SS "struct \fBgraph\fP* graph_init (int max_state_changes, int snapshot_timestamp, int max_loop, unsigned int lvl_verbose, enum \fBCONTEXT\fP context, enum \fBMEM_OPTION\fP mem_option)"
@PARAM max_state_changes: # state changes before entering sink vertex due to infinite loop of states; -1 to ignore @PARAM snapshot_timestamp: printing out data at given timestamp for user; -1 for none; 0 for first and last state @PARAM lvl_verbose: how verbose timestamp print is @PARAM context: linear or context-switch based @RETURN an empty graph Creates a graph structures 
.PP
References graph::black_fire, graph::black_locked, graph::black_vertex_count, graph::color_lock, graph::context, destroy_avl(), destroy_stack(), init_avl(), init_stack(), graph::lock, graph::lvl_verbose, graph::max_loop, graph::max_state_changes, graph::mem_option, graph::modify, NONE, graph::num_vertices, graph::pause, graph::pause_cond, graph::previous_color, graph::print_flag, RED, graph::red_fire, graph::red_locked, graph::red_vertex_count, graph::remove_edges, graph::remove_vertices, SINGLE, graph::snapshot_timestamp, graph::start, graph::state, graph::state_count, topologic_debug, and graph::vertices\&.
.PP
Referenced by init()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Topologic from the source code\&.
