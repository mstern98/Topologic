.TH "graph" 3 "Mon Mar 15 2021" "Version 1.0.6" "Topologic" \" -*- nroff -*-
.ad l
.nh
.SH NAME
graph
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <graph\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "enum \fBCONTEXT\fP \fBcontext\fP"
.br
.ti -1c
.RI "enum \fBMEM_OPTION\fP \fBmem_option\fP"
.br
.ti -1c
.RI "struct \fBAVLTree\fP * \fBvertices\fP"
.br
.ti -1c
.RI "struct \fBstack\fP * \fBstart\fP"
.br
.ti -1c
.RI "struct \fBstack\fP * \fBmodify\fP"
.br
.ti -1c
.RI "struct \fBstack\fP * \fBremove_edges\fP"
.br
.ti -1c
.RI "struct \fBstack\fP * \fBremove_vertices\fP"
.br
.ti -1c
.RI "int \fBmax_state_changes\fP"
.br
.ti -1c
.RI "int \fBmax_loop\fP"
.br
.ti -1c
.RI "int \fBsnapshot_timestamp\fP"
.br
.ti -1c
.RI "unsigned int \fBlvl_verbose\fP"
.br
.ti -1c
.RI "int \fBstate_count\fP"
.br
.ti -1c
.RI "pthread_mutex_t \fBlock\fP"
.br
.ti -1c
.RI "pthread_mutex_t \fBcolor_lock\fP"
.br
.ti -1c
.RI "sig_atomic_t \fBstate\fP"
.br
.ti -1c
.RI "sig_atomic_t \fBprevious_color\fP"
.br
.ti -1c
.RI "sig_atomic_t \fBprint_flag\fP"
.br
.ti -1c
.RI "sig_atomic_t \fBred_vertex_count\fP"
.br
.ti -1c
.RI "sig_atomic_t \fBblack_vertex_count\fP"
.br
.ti -1c
.RI "sig_atomic_t \fBpause\fP"
.br
.ti -1c
.RI "sig_atomic_t \fBred_locked\fP"
.br
.ti -1c
.RI "sig_atomic_t \fBblack_locked\fP"
.br
.ti -1c
.RI "sig_atomic_t \fBnum_vertices\fP"
.br
.ti -1c
.RI "pthread_cond_t \fBpause_cond\fP"
.br
.ti -1c
.RI "pthread_cond_t \fBred_fire\fP"
.br
.ti -1c
.RI "pthread_cond_t \fBblack_fire\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Graph 
.SH "Field Documentation"
.PP 
.SS "pthread_cond_t graph::black_fire"

.PP
Referenced by destroy_graph(), fire(), graph_init(), and run()\&.
.SS "sig_atomic_t graph::black_locked"

.PP
Referenced by destroy_graph(), fire(), graph_init(), and run()\&.
.SS "sig_atomic_t graph::black_vertex_count"

.PP
Referenced by destroy_graph(), fire(), graph_init(), and run()\&.
.SS "pthread_mutex_t graph::color_lock"

.PP
Referenced by destroy_graph(), graph_init(), and run()\&.
.SS "enum \fBCONTEXT\fP graph::context"

.PP
Referenced by create_vertex(), destroy_graph(), fire(), graph_init(), print_graph(), process_requests(), remove_vertex(), remove_vertex_id(), run(), run_single(), start_set(), and submit_request()\&.
.SS "pthread_mutex_t graph::lock"

.PP
Referenced by create_vertex(), destroy_graph(), fire(), graph_init(), pause_graph(), print_graph(), process_requests(), remove_vertex(), remove_vertex_id(), resume_graph(), run(), run_single(), and submit_request()\&.
.SS "unsigned int graph::lvl_verbose"

.PP
Referenced by graph_init(), print_edges(), print_graph(), and print_state()\&.
.SS "int graph::max_loop"

.PP
Referenced by fire(), graph_init(), print_graph(), and run_single()\&.
.SS "int graph::max_state_changes"

.PP
Referenced by fire(), graph_init(), print_graph(), run(), and run_single()\&.
.SS "enum \fBMEM_OPTION\fP graph::mem_option"

.PP
Referenced by graph_init(), run(), and switch_vertex()\&.
.SS "struct \fBstack\fP* graph::modify"

.PP
Referenced by destroy_graph(), graph_init(), process_requests(), submit_request(), and test_destroy_request()\&.
.SS "sig_atomic_t graph::num_vertices"

.PP
Referenced by fire(), graph_init(), print_graph(), run(), and run_single()\&.
.SS "sig_atomic_t graph::pause"

.PP
Referenced by graph_init(), pause_graph(), resume_graph(), run(), and run_single()\&.
.SS "pthread_cond_t graph::pause_cond"

.PP
Referenced by destroy_graph(), graph_init(), pause_graph(), run(), and run_single()\&.
.SS "sig_atomic_t graph::previous_color"

.PP
Referenced by graph_init(), and run()\&.
.SS "sig_atomic_t graph::print_flag"

.PP
Referenced by graph_init(), and run()\&.
.SS "pthread_cond_t graph::red_fire"

.PP
Referenced by destroy_graph(), fire(), graph_init(), and run()\&.
.SS "sig_atomic_t graph::red_locked"

.PP
Referenced by destroy_graph(), fire(), graph_init(), and run()\&.
.SS "sig_atomic_t graph::red_vertex_count"

.PP
Referenced by destroy_graph(), fire(), graph_init(), and run()\&.
.SS "struct \fBstack\fP* graph::remove_edges"

.PP
Referenced by destroy_graph(), graph_init(), process_requests(), submit_request(), and test_destroy_request()\&.
.SS "struct \fBstack\fP* graph::remove_vertices"

.PP
Referenced by destroy_graph(), graph_init(), process_requests(), submit_request(), and test_destroy_request()\&.
.SS "int graph::snapshot_timestamp"

.PP
Referenced by graph_init(), and print_graph()\&.
.SS "struct \fBstack\fP* graph::start"

.PP
Referenced by destroy_graph(), graph_init(), run(), run_single(), and start_set()\&.
.SS "sig_atomic_t graph::state"

.PP
Referenced by destroy_graph(), fire(), graph_init(), run(), and run_single()\&.
.SS "int graph::state_count"

.PP
Referenced by fire(), graph_init(), print_graph(), run(), and run_single()\&.
.SS "struct \fBAVLTree\fP* graph::vertices"

.PP
Referenced by cleanup(), create_vertex(), destroy_graph(), graph_init(), main(), print_graph(), print_state(), remove_vertex(), remove_vertex_id(), setupEdges(), start_set(), test_graph_add_bi_edge(), test_graph_add_edge(), test_graph_modify_bi_edge(), test_graph_modify_edge(), test_graph_modify_vertex(), test_graph_remove_bi_edge(), test_graph_remove_edge(), and test_graph_remove_vertex()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Topologic from the source code\&.
