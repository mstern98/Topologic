.TH "include/AVL.h" 3 "Mon Mar 15 2021" "Version 1.0.6" "Topologic" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/AVL.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include '\&./stack\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBAVLNode\fP"
.br
.ti -1c
.RI "struct \fBAVLTree\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fBAVLTree\fP * \fBinit_avl\fP ()"
.br
.ti -1c
.RI "int \fBinsert\fP (struct \fBAVLTree\fP *tree, void *data, int id)"
.br
.ti -1c
.RI "void * \fBremove_ID\fP (struct \fBAVLTree\fP *tree, int id)"
.br
.ti -1c
.RI "void * \fBfind\fP (struct \fBAVLTree\fP *tree, int id)"
.br
.ti -1c
.RI "void \fBinorder\fP (struct \fBAVLTree\fP *tree, struct \fBstack\fP *\fBstack\fP)"
.br
.ti -1c
.RI "void \fBpostorder\fP (struct \fBAVLTree\fP *tree, struct \fBstack\fP *\fBstack\fP)"
.br
.ti -1c
.RI "void \fBpreorder\fP (struct \fBAVLTree\fP *tree, struct \fBstack\fP *\fBstack\fP)"
.br
.ti -1c
.RI "void \fBstackify\fP (struct \fBAVLTree\fP *tree, struct \fBstack\fP *\fBstack\fP)"
.br
.ti -1c
.RI "void \fBdestroy_avl\fP (struct \fBAVLTree\fP *tree)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void destroy_avl (struct \fBAVLTree\fP * tree)"

.PP
References destroy_avl_nodes(), AVLTree::root, and AVLTree::size\&.
.PP
Referenced by create_vertex(), destroy_graph_avl(), graph_init(), and main()\&.
.SS "void* find (struct \fBAVLTree\fP * tree, int id)"

.PP
References find_node(), and AVLTree::root\&.
.PP
Referenced by cleanup(), create_edge(), init(), main(), modify_edge(), remove_vertex_id(), setupEdges(), setupSelfEdge(), start_set(), test_delete(), test_find(), test_graph_add_bi_edge(), test_graph_add_edge(), test_graph_modify_bi_edge(), test_graph_modify_edge(), test_graph_modify_vertex(), test_graph_remove_bi_edge(), test_graph_remove_edge(), and test_graph_remove_vertex()\&.
.SS "struct \fBAVLTree\fP* init_avl ()"

.PP
References AVLTree::root, and AVLTree::size\&.
.PP
Referenced by create_vertex(), graph_init(), and main()\&.
.SS "void inorder (struct \fBAVLTree\fP * tree, struct \fBstack\fP * stack)"

.PP
References inorder_nodes(), AVLTree::root, and AVLTree::size\&.
.PP
Referenced by print_state(), test_delete(), and test_inorder()\&.
.SS "int insert (struct \fBAVLTree\fP * tree, void * data, int id)"

.PP
References create_node(), AVLNode::data, insert_node(), AVLTree::root, and AVLTree::size\&.
.PP
Referenced by create_edge(), create_vertex(), insert_node(), and test_insert()\&.
.SS "void postorder (struct \fBAVLTree\fP * tree, struct \fBstack\fP * stack)"

.PP
References postorder_nodes(), AVLTree::root, and AVLTree::size\&.
.SS "void preorder (struct \fBAVLTree\fP * tree, struct \fBstack\fP * stack)"

.PP
References preorder_nodes(), AVLTree::root, and AVLTree::size\&.
.PP
Referenced by destroy_graph_avl(), fire(), print_edges(), and run_single()\&.
.SS "void* remove_ID (struct \fBAVLTree\fP * tree, int id)"

.PP
References AVLNode::data, remove_node(), AVLTree::root, and AVLTree::size\&.
.PP
Referenced by create_edge(), remove_edge(), remove_edge_id(), remove_vertex(), and test_delete()\&.
.SS "void stackify (struct \fBAVLTree\fP * tree, struct \fBstack\fP * stack)"

.PP
References AVLTree::root, AVLTree::size, and stackify_nodes()\&.
.PP
Referenced by remove_vertex()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Topologic from the source code\&.
