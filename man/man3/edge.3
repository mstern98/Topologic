.TH "edge" 3 "Mon Mar 15 2021" "Version 1.0.6" "Topologic" \" -*- nroff -*-
.ad l
.nh
.SH NAME
edge
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <edge\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "int \fBid\fP"
.br
.ti -1c
.RI "int(* \fBf\fP )(void *, void *, const void *const \fBa_vars\fP, const void *const \fBb_vars\fP)"
.br
.ti -1c
.RI "void * \fBglbl\fP"
.br
.ti -1c
.RI "const void *const  * \fBa_vars\fP"
.br
.ti -1c
.RI "const void *const  * \fBb_vars\fP"
.br
.ti -1c
.RI "struct \fBvertex\fP * \fBa\fP"
.br
.ti -1c
.RI "struct \fBvertex\fP * \fBb\fP"
.br
.ti -1c
.RI "enum \fBedge_type\fP \fBedge_type\fP"
.br
.ti -1c
.RI "struct \fBedge\fP * \fBbi_edge\fP"
.br
.ti -1c
.RI "pthread_mutex_t \fBbi_edge_lock\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Edge 
.SH "Field Documentation"
.PP 
.SS "struct \fBvertex\fP* edge::a"

.PP
Referenced by create_bi_edge(), create_edge(), modify_bi_edge(), modify_edge(), print_edges(), remove_bi_edge(), remove_edge(), remove_edge_id(), remove_vertex(), test_graph_add_bi_edge(), and test_graph_add_edge()\&.
.SS "const void* const* edge::a_vars"

.PP
Referenced by create_edge(), fire(), remove_edge(), remove_edge_id(), and run_single()\&.
.SS "struct \fBvertex\fP* edge::b"

.PP
Referenced by create_bi_edge(), create_edge(), fire(), modify_bi_edge(), modify_edge(), print_edges(), remove_bi_edge(), remove_edge(), remove_edge_id(), remove_vertex(), run_single(), test_graph_add_bi_edge(), and test_graph_add_edge()\&.
.SS "const void* const* edge::b_vars"

.PP
Referenced by create_edge(), fire(), remove_edge(), remove_edge_id(), and run_single()\&.
.SS "struct \fBedge\fP* edge::bi_edge"

.PP
Referenced by create_bi_edge(), create_edge(), print_edges(), remove_edge(), remove_edge_id(), and remove_vertex()\&.
.SS "pthread_mutex_t edge::bi_edge_lock"

.PP
Referenced by create_bi_edge(), fire(), remove_edge(), remove_edge_id(), and remove_vertex()\&.
.SS "enum \fBedge_type\fP edge::edge_type"

.PP
Referenced by create_bi_edge(), create_edge(), fire(), main(), print_edges(), remove_edge(), remove_edge_id(), and remove_vertex()\&.
.SS "int(* edge::f) (void *, void *, const void *const \fBa_vars\fP, const void *const \fBb_vars\fP)"

.PP
Referenced by create_bi_edge(), create_edge(), fire(), modify_bi_edge(), modify_edge(), print_edges(), remove_edge(), remove_edge_id(), remove_vertex(), run_single(), test_graph_add_bi_edge(), and test_graph_add_edge()\&.
.SS "void* edge::glbl"

.PP
Referenced by cleanup(), create_bi_edge(), create_edge(), fire(), modify_bi_edge(), modify_edge(), print_edges(), print_state(), remove_edge(), remove_edge_id(), remove_vertex(), run_single(), test_graph_add_bi_edge(), test_graph_add_edge(), and test_graph_remove_edge()\&.
.SS "int edge::id"

.PP
Referenced by create_edge(), print_edges(), remove_edge(), remove_edge_id(), and remove_vertex()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Topologic from the source code\&.
